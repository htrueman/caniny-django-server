# Generated by Django 2.2 on 2019-05-07 16:50

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('life_stage', models.CharField(blank=True, choices=[('baby', 'Baby'), ('young', 'Young'), ('adult', 'Adult'), ('senior', 'Senior')], max_length=6, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('species', models.CharField(choices=[('cat', 'Cat'), ('dog', 'Dog'), ('other', 'Other')], max_length=5)),
                ('species_details', models.TextField(blank=True, null=True)),
                ('origin_country', models.CharField(blank=True, choices=[('US', 'United States'), ('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua And Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia And Herzegowina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Rep'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', 'Cote D`ivoire'), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('TP', 'East Timor'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French S. Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea-bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', 'Korea (North)'), ('KR', 'Korea (South)'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macau'), ('MK', 'Macedonia'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('KN', 'Saint Kitts And Nevis'), ('LC', 'Saint Lucia'), ('VC', 'St Vincent/Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SH', 'St. Helena'), ('PM', 'St.Pierre'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad And Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('UK', 'United Kingdom'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VA', 'Vatican City State'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('YU', 'Yugoslavia'), ('ZR', 'Zaire'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=64, null=True)),
                ('pregnant', models.BooleanField(blank=True, null=True)),
                ('personality', models.CharField(choices=[('calm', 'Calm'), ('stable', 'Stable'), ('alert', 'Alert'), ('nervous', 'Nervous'), ('anxious', 'Anxious'), ('defensive', 'Defensive'), ('aggressive', 'Aggressive')], max_length=10, null=True)),
                ('energy_level', models.CharField(blank=True, choices=[('lazy', 'Lazy'), ('chill', 'Chill'), ('active', 'Active'), ('energetic', 'Energetic'), ('hyper', 'Hyper')], max_length=9, null=True)),
                ('cats_friendly', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('only_females', 'Only Females'), ('only_males', 'Only Males'), ('unknown', 'Unknown')], max_length=12, null=True)),
                ('dogs_friendly', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('only_females', 'Only Females'), ('only_males', 'Only Males'), ('unknown', 'Unknown')], max_length=12, null=True)),
                ('animals_friendly', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('only_small_animals', 'Only Small Animals'), ('only_big_animals', 'Only Big Animals'), ('unknown', 'Unknown')], max_length=18, null=True)),
                ('humans_friendly', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('only_females', 'Only Females'), ('only_males', 'Only Males'), ('unknown', 'Unknown')], max_length=12, null=True)),
                ('kids_friendly', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('only_females', 'Only females'), ('only_males', 'Only males'), ('only_males', 'Only young kids'), ('only_males', 'Only old kids'), ('only_males', 'Both young & old'), ('unknown', 'Unknown')], max_length=18, null=True)),
                ('bites', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=3, null=True)),
                ('for_adoption', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('hold', 'Hold')], max_length=4, null=True)),
                ('for_foster', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('to_be', 'To be'), ('hold', 'Hold')], max_length=4, null=True)),
                ('accommodation', models.CharField(blank=True, choices=[('apartment', 'Apartment'), ('townhouse', 'Townhouse'), ('house', 'House'), ('villa', 'Villa'), ('farm', 'Farm'), ('other', 'Other')], max_length=9, null=True)),
                ('tag_id', models.CharField(blank=True, max_length=64, null=True)),
                ('chip_producer', models.CharField(blank=True, max_length=64, null=True)),
                ('chip_id', models.CharField(blank=True, max_length=64, null=True)),
                ('joined_reason', models.CharField(blank=True, choices=[('stray', 'Stray'), ('rescue', 'Rescue'), ('neglected', 'Neglected'), ('transfer', 'Transfer'), ('medical', 'Medical'), ('other', 'Other')], max_length=9, null=True)),
                ('entry_date', models.DateField(blank=True, null=True)),
                ('leave_reason', models.CharField(blank=True, choices=[('adoption', 'Adoption'), ('foster', 'Foster'), ('medical', 'Medical'), ('temporary', 'Temporary'), ('death', 'Death'), ('other', 'Other')], max_length=9, null=True)),
                ('leave_date', models.DateField(blank=True, null=True)),
                ('history', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='animals/photos')),
            ],
        ),
        migrations.CreateModel(
            name='AnimalAppearance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, choices=[('extra_small', 'Extra small'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('extra_large', 'Extra large')], max_length=11, null=True)),
                ('first_coat_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Grey', 'Grey'), ('White', 'White'), ('Brown', 'Brown'), ('Red', 'Red '), ('Orange', 'Orange'), ('Yellow', 'Yellow'), ('Cream', 'Cream'), ('Fawn', 'Fawn')], max_length=6, null=True)),
                ('second_coat_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Grey', 'Grey'), ('White', 'White'), ('Brown', 'Brown'), ('Red', 'Red '), ('Orange', 'Orange'), ('Yellow', 'Yellow'), ('Cream', 'Cream'), ('Fawn', 'Fawn')], max_length=6, null=True)),
                ('third_coat_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Grey', 'Grey'), ('White', 'White'), ('Brown', 'Brown'), ('Red', 'Red '), ('Orange', 'Orange'), ('Yellow', 'Yellow'), ('Cream', 'Cream'), ('Fawn', 'Fawn')], max_length=6, null=True)),
                ('coat_marks', models.CharField(blank=True, choices=[('stripped', 'Stripped'), ('dotted', 'Dotted')], max_length=8, null=True)),
                ('coat_type', models.CharField(blank=True, choices=[('short', 'Short'), ('medium', 'Medium'), ('long', 'Long'), ('hairless', 'Hairless')], max_length=8, null=True)),
                ('first_eye_color', models.CharField(blank=True, choices=[('black', 'Black'), ('grey', 'Grey'), ('brown', 'Brown'), ('hazel', 'Hazel'), ('green', 'Green'), ('blue', 'Blue')], max_length=5, null=True)),
                ('second_eye_color', models.CharField(blank=True, choices=[('black', 'Black'), ('grey', 'Grey'), ('brown', 'Brown'), ('hazel', 'Hazel'), ('green', 'Green'), ('blue', 'Blue')], max_length=5, null=True)),
                ('ears', models.CharField(blank=True, choices=[('pointing', 'Pointing'), ('cropped', 'Cropped'), ('flapping', 'Flapping'), ('round', 'Round')], max_length=8, null=True)),
                ('tail', models.CharField(blank=True, choices=[('short', 'Short'), ('long', 'Long'), ('docked', 'Docked')], max_length=6, null=True)),
                ('describe_appearance', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimalHealth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight_condition', models.CharField(blank=True, max_length=11, null=True)),
                ('disabled', models.BooleanField(blank=True, null=True)),
                ('injured', models.BooleanField(blank=True, null=True)),
                ('cryptorchid', models.BooleanField(blank=True, null=True)),
                ('sterilized', models.CharField(blank=True, max_length=8, null=True)),
                ('sterilized_date', models.DateField(blank=True, null=True)),
                ('eyes_sight', models.CharField(blank=True, choices=[('clear', 'Clear'), ('discharge', 'Discharge'), ('cloudy', 'Cloudy'), ('injured', 'Injured')], max_length=9, null=True)),
                ('blind', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('one_eye', 'One eye')], max_length=7, null=True)),
                ('deaf', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('one_ear', 'One ear')], max_length=7, null=True)),
                ('teeth', models.CharField(blank=True, choices=[('clean', 'clean'), ('tartar', 'tartar'), ('rotten', 'rotten'), ('abscess_or_sores', 'Abscess/Sores'), ('worn', 'Worn'), ('impacted', 'Impacted'), ('few_missing', 'Few missing'), ('none', 'None')], max_length=16, null=True)),
                ('gums', models.CharField(blank=True, choices=[('pink', 'Pink'), ('red', 'Red'), ('white', 'White'), ('abscess_or_sores', 'Abscess/Sores')], max_length=16, null=True)),
                ('describe_health', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimalHealthCare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('care_type', models.CharField(choices=[('vaccination', 'Vaccination'), ('medicine', 'Medicine'), ('grooming', 'Grooming'), ('boarding', 'Boarding'), ('other', 'Other')], max_length=11)),
                ('note', models.CharField(blank=True, max_length=128, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimalHealthMedication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_type', models.CharField(max_length=128)),
                ('medication_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='AnimalOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_status', models.CharField(blank=True, choices=[('existing_owner', 'Existing Owner'), ('previous_owner', 'Previous Owner'), ('foster', 'Foster'), ('adopter', 'Adopter'), ('no_owner', 'No Owner'), ('other', 'Other')], max_length=14, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('city', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.CharField(blank=True, max_length=64, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=64, null=True)),
                ('origin_country', models.CharField(blank=True, choices=[('US', 'United States'), ('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua And Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia And Herzegowina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Rep'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', 'Cote D`ivoire'), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('TP', 'East Timor'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French S. Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea-bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', 'Korea (North)'), ('KR', 'Korea (South)'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macau'), ('MK', 'Macedonia'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('KN', 'Saint Kitts And Nevis'), ('LC', 'Saint Lucia'), ('VC', 'St Vincent/Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SH', 'St. Helena'), ('PM', 'St.Pierre'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad And Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('UK', 'United Kingdom'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VA', 'Vatican City State'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('YU', 'Yugoslavia'), ('ZR', 'Zaire'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='animals/owners/profile_images')),
                ('profile_id_image', models.ImageField(blank=True, null=True, upload_to='animals/owners/profile_id_images')),
            ],
        ),
        migrations.CreateModel(
            name='AnimalsTableMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('columns', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('species', models.CharField(choices=[('cat', 'Cat'), ('dog', 'Dog'), ('other', 'Other')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='AnimalTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obedience', models.CharField(blank=True, choices=[('none', 'None'), ('basic', 'Basic'), ('advanced', 'Advanced'), ('professional', 'Professional')], max_length=12, null=True)),
                ('house_trained', models.BooleanField(blank=True, null=True)),
                ('crate_trained', models.BooleanField(blank=True, null=True)),
                ('fence_required', models.BooleanField(blank=True, null=True)),
                ('describe_training', models.TextField(blank=True, null=True)),
                ('animal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='animals.Animal')),
            ],
        ),
    ]
